<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="spdatabase.spinc.servicethreadhandler">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <!-- Required to register a SyncStatusObserver to display a "syncing..." progress indicator. -->
    <uses-permission android:name="android.permission.READ_SYNC_STATS"/>
    <!-- Required to enable our SyncAdapter after it's created. -->
    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS"/>
    <!-- Required because we're manually creating a new account. -->
    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS"/>

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".binderservice.BindServiceActivity" />
        <activity android:name=".handler.HandlerActivity" />
        <activity android:name=".handlerwith_asynctask.HandlerWithAsyncActivity" />
        <activity android:name=".messenger.MessengerActivity" />
        <activity android:name=".thread.ThreadActivity" />
        <activity android:name=".normalservice.ServiceActivity" />
        <activity android:name=".scheduleService.ScheduleServiceActivity" />
        <activity android:name=".intentService.IntentServiceActivity" />
        <activity android:name=".resultReciever.ResultServiceActivity" />

        <service android:name=".normalservice.NormalService" />
        <service
            android:name=".binderservice.BindService"
            android:enabled="true"
            android:exported="true" />
        <service
            android:name=".intentService.MyIntentService"
            android:exported="false" />
        <service
            android:name=".messenger.MessengerService"
            android:enabled="true"
            android:exported="true" />

        <activity android:name=".aidl.AIDLActivity" />

        <service android:name=".aidl.AddService" />
        <service android:name=".intentService.QuoteService" />

        <activity android:name=".alarm.AlarmActivity" />

        <service android:name=".alarm.SampleSchedulingService" />

        <receiver android:name=".alarm.SampleAlarmReceiver" />
        <receiver android:name=".alarm.SampleBootReceiver">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
        </receiver>

        <activity android:name=".syncAdapter.basicsyncadapter.EntryListActivity"></activity>


        <!-- ContentProvider to store feed data.

        The "authorities" here are defined as part of a ContentProvider interface. It's used here
        as an attachment point for the SyncAdapter. See res/xml/syncadapter.xml and
        SyncService.java.

        Since this ContentProvider is not exported, it will not be accessible outside of this app's
        package. -->
        <provider
            android:name=".syncAdapter.basicsyncadapter.provider.FeedProvider"
            android:authorities="com.example.android.basicsyncadapter"
            android:exported="false" />

        <!-- This service implements our SyncAdapter. It needs to be exported, so that the system
        sync framework can access it. -->
        <service android:name=".syncAdapter.basicsyncadapter.SyncService"
            android:exported="true">
            <!-- This intent filter is required. It allows the system to launch our sync service
            as needed. -->
            <intent-filter>
                <action android:name="android.content.SyncAdapter" />
            </intent-filter>
            <!-- This points to a required XML file which describes our SyncAdapter. -->
            <meta-data android:name="android.content.SyncAdapter"
                android:resource="@xml/syncadapter" />
        </service>

        <!-- This implements the account we'll use as an attachment point for our SyncAdapter. Since
        our SyncAdapter doesn't need to authenticate the current user (it just fetches a public RSS
        feed), this account's implementation is largely empty.

        It's also possible to attach a SyncAdapter to an existing account provided by another
        package. In that case, this element could be omitted here. -->
        <service android:name=".syncAdapter.common.accounts.GenericAccountService">
            <!-- Required filter used by the system to launch our account service. -->
            <intent-filter>
                <action android:name="android.accounts.AccountAuthenticator" />
            </intent-filter>
            <!-- This points to an XMLf ile which describes our account service. -->
            <meta-data android:name="android.accounts.AccountAuthenticator"
                android:resource="@xml/authenticator" />
        </service>

    </application>

</manifest>